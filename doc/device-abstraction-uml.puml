@startuml
class Session {
 - String name
 - void tuneKernels()
 + void register_device()
 + void run()
}

abstract class BaseDevice {
 - int id
 + void register_op()
}

class Node {
}

class Edge {
 - shape3d shape
}

abstract class Layer {
 - String layer_type
 - void tuneKernel()
 + virtual void forward_propagation()
 + virtual void backward_propagation()
}

class ConvolutionalLayer {
}

class MaxPoolingLayer {
}

abstract class Backend {
 + virtual conv2d()
 + virtual conv2d_q()
 + virtual conv2d_eq()
 + virtual deconv2d()
 + virtual deconv2d_q()
 + virtual deconv2d_eq()
 + virtual maxpool()
 + virtual fully()
 + virtual fully_q()
}

class TinyCNNBackend {
}

class NNPackBackend {
}

class LibDNNBackend {
}

Layer --> Kernel

Session *-- BaseDevice

BaseDevice <|-- CPUDevice
BaseDevice <|-- GPUDevice

Node <|-- Layer
Node *-- Edge : prev
Node *-- Edge : next

Edge --> Node : prev
Edge *-- Node : next
Edge *-- Data : data
Edge *-- Data : grad

Layer <|-- ConvolutionalLayer
Layer <|-- MaxPoolingLayer

BaseDevice *-- Layer : own_list
ConvolutionalLayer *-- Backend : backend
MaxPoolingLayer *-- Backend : backend

Backend <|-- TinyCNNBackend
Backend <|-- NNPackBackend
Backend <|-- LibDNNBackend
@enduml
