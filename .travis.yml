sudo: false
language: cpp
os:
  - linux
  - osx
compiler:
  - gcc
  - clang
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-4.8
    - g++-4.8
    - clang
    - cmake
    - git
    - libtbb-dev
    - libboost-dev
    - libjpeg8-dev
    - libtiff4-dev
    - libjasper-dev
    - libpng12-dev 
    - libgtk2.0-dev
    - libavcodec-dev
    - libavformat-dev
    - libswscale-dev
    - libv4l-dev
    - libatlas-base-dev
    - gfortran
before install:
#  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update && brew tap homebrew/science; fi
#  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install --c++11 --with-tbb tbb boost cmake opencv3 && brew link opencv3 --force; fi
#  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone https://github.com/Itseez/opencv.git && cd opencv && git checkout 3.1.0 && mkdir build && cd build && cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX /usr/local .. && make && make install && ldconfig; fi
install:
# OSX intall
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew tap homebrew/science; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install --c++11 tbb boost cmake; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install --c++11 --with-tbb opencv3; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew link --force opencv3; fi
# Linux install
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone https://github.com/Itseez/opencv.git; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd opencv; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git checkout 3.1.0; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mkdir build; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd build; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local ..; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then make && make install && ldconfig; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
script:
  - cmake -DUSE_TBB=ON -DENABLE_TESTS=ON .
  - make 
  - ls /usr/local/lib/*opencv*
  - ./tiny_cnn_test
branches:
  only:
    - master

